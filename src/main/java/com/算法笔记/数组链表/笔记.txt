21.合并两个有序链表：
使用虚拟头结点可以避免处理空指针的情况，降低代码的复杂性

23.合并 K 个升序链表：
这里我们可以使用优先队列这种能够自动排序的数据结构，也要使用虚拟头结点，注意判空。
优先队列(底层为堆)一次poll或者add的时间复杂度是：O(log k)，k为链表条数(队列元素个数)，总共要执行N(总节点数)次，所以这里的时间复杂度为O(N*log k)

02.返回倒数第 k 个节点：
①假设链表有n个节点，倒数第k个节点就是正数第n-k+1个节点，也就是说只要往前走n-k步就可以找到倒数第k个节点
②我们让指针p1指向head，然后向前走k步，接下来让p2指向head,让p1、p2同时向前走， 当p1走到链表末尾的空指针时前进了n-k步，则p2也往前走了n-k步，此时p2指向的就是倒数第k个节点

19.删除链表的倒数第 N 个结点：
直接复用上一题的函数，要删除倒数第n个，要先找到倒数第n+1个节点

876.链表的中间结点：
使用快慢指针，初始时都指向head，慢指针slow走一步时，快指针fast走两步。当fast走到链表末尾时，slow就指向了链表中点。(当中点有两个时，这里返回的是第二个)
这里快慢指针稍作修改还可以用于判断链表是否成环

141.环形链表：
使用快慢指针，如果快慢指针相遇，说明有环，如果fast指针最终变为null，则无环

022. 环形链表 II：
https://leetcode.cn/problems/c32eOV/solutions/1037744/lian-biao-zhong-huan-de-ru-kou-jie-dian-vvofe/
